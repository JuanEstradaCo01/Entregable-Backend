paths:
  /api/products/:
    get:
      summary: Obtiene todos los productos
      tags:
        - Products CRUD
      responses:
        "200":
          description: Los productos se muestran correctamente
        "404":
          description: No se encontro el requerimiento
        "500":
          description: Ocurrio un error en el servidor
components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: ObjectId
          description: ID generado por mongo
        id:
          type: Number
          description: ID unico autogenerado segun la cantidad de productos
        tittle:
          type: String
          description: Nombre del producto
        description: 
          type: String
          description: Tamaño del producto (pequeño, mediano, grande)
        price: 
          type: Number
          description: Precio del producto
        thumbnail:
          type: String
          description: Imagen del producto
        code:
          type: String
          description: Codigo unico para identificacion del producto
        status: 
          type: Boolean
          description: Disponibilidad del producto (true o false)
        stock: 
          type: Number
          description: Cantidad de unidades disponibles
        category:
          type: String
          description: Categoria del producto
        cartId: 
          type: ObjectId
          description: ID generado por mongo para el carrito del usuario
        owner: 
          type: String
          description: Firma quien creo el producto, si un admin o un usuario Premium (en caso de un usuario Premium firmaria con el correo del mismo)
      example:
        _id: ObjectId("lksadn98312dsa1324")
        id: 1
        tittle: Manzana
        description: mediano
        price: 15
        thumbnail: Sin imagen
        code: abc001
        status: true
        stock: 500
        category: Fruta
        cartId: ObjectId("asdqw5436dfdsgs3542")
        owner: Admin

      